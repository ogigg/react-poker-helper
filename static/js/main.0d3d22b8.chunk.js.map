{"version":3,"sources":["Rules.js","ItemTypes.js","styles.jsx","card.jsx","msc/Cards.jsx","PokerLogic.jsx","AddCardDialog.jsx","instructionDialog.jsx","CookieConsentDialog.jsx","App.js","serviceWorker.js","index.js"],"names":["RulesPage","ItemTypes","useStyles","makeStyles","theme","card","height","width","cardPlaceHolder","borderStyle","addNewCardBtnChildren","flex","color","suit","fontSize","margin","bigSuit","cardNumber","fontWeight","result","avatar","backgroundColor","redColor","blackColor","cardsList","columnCount","columnGap","padding","spacing","suitSelector","numberSelector","minHeight","textAlign","numberSelectAvatar","BaseCard","props","cardAttr","useState","state","setCardAttr","useDrag","item","type","end","monitor","dropResult","getDropResult","isNowCreated","destination","name","source","sourceId","number","collect","isDragging","drag","opacity","classes","className","ref","Card","style","CardContent","Grid","container","direction","alignContent","CardSuit","alignItems","size","cardValues","cardSuits","key","label","sign","getTriples","cards","totalNumberOfTriples","map","numberOfTriples","forEach","Math","floor","getPairs","totalNumberOfPairs","numberOfPairs","getCardRank","cardRank","parseInt","isNaN","sortCards","sort","a","b","Result","deckArray","pairs","threeOfAKind","isStraight","cardsInRow","previousNumber","sortedCards","cardsWithStraight","some","o","push","c","straight","diamonds","spades","hearts","clubs","flush","filter","length","totalNumberOfFours","numberOfFours","fourOfKind","straightFlush","SimpleDialog","onClose","open","selectedValue","React","selectedSuit","setSelectedSuit","selectedNumber","setSelectedNumber","useEffect","console","log","StylesProvider","injectFirst","Dialog","aria-labelledby","DialogTitle","id","List","display","flexDirection","ListItem","button","onClick","value","ListItemAvatar","Avatar","ListItemText","primary","random","AddNewCardTooltip","setOpen","Tooltip","title","TransitionComponent","Zoom","aria-label","placement","Fab","fab","Transition","forwardRef","Slide","InstructionDialog","handleClose","fullWidth","maxWidth","keepMounted","aria-describedby","DialogContent","DialogContentText","DialogActions","Button","CookieConsentDialog","cookieName","componentType","message","Header","page","component","Link","to","variant","cardCreated","CardPlaceHolder","useDrop","accept","drop","isOver","canDrop","cardsDeckArray","HomePage","setIsCardCreated","setPlaceholderId","instructionDialog","setInstructionDialog","Cookies","get","set","Fragment","DndProvider","backend","Backend","xs","justify","App","setPage","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d3d22b8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const RulesPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Zasady gry w pokera</h1>\r\n                <p>Poker to jedna z najpopularniejszych gier karcianych, nie tylko w naszym kraju, ale na całym świecie. Jedni grają amatorsko, jedynie dla przyjemności, inni rywalizują w turniejach, gdzie stawką są naprawdę duże pieniądze. Gra w pokera wciąga i sprawia, że czasem trudno wręcz odejść od stołu i powiedzieć: pas!</p>\r\n            <h2>Układy kart w pokerze</h2>\r\n                <p><b>Para</b> – dwie karty o takiej samej wartości. W przypadku kilku takich układów na stole, wygrywa gracz, którego para składa się z silniejszych kart.</p>\r\n                <p><b>Dwie pary</b> – w przypadku kilku układów na stole, reguły pokerowe wskazują, że wygrywa gracz posiadający najwyższą parę.</p>\r\n                <p><b>Trójka</b> – układ złożony z trzech kart o tej samej wartości.</p>\r\n                <p><b>Strit</b> – sekwens kart w różnych kolorach, np. od 3 do 7 lub od 10 do Asa. Jeśli w poker przez Internet kilku graczy posiada strita, decyduje układ z najwyższą kartą.</p>\r\n                <p><b>Kolor</b> – układ pięciu kart w tym samym kolorze karcianym (pik, trefl, karo, kier). Analogiczna sytuacja co wyżej, w przypadku kilku takich układów decyduje wyższa karta.</p>\r\n                <p><b>Full</b> – bardzo mocny układ, który pozwala na odważne licytowanie w poker na kasę. Składa się z trójki i jednej pary. Jeśli kilku graczy uzyska ten układ, najpierw decyduje najwyższa trójka, a potem para.</p>\r\n                <p><b>Kareta</b> – cztery karty o jednakowej wartości. W poker online układ ten jest bardzo rzadki i zwykle pozwala na bardzo wysoką licytację.</p>   \r\n                <p><b>Poker</b> – najsilniejszy układ w poker zasady gry. To sekwens kart w tym samym kolorze. Innymi słowy, połączenie strita i koloru. Istnieje również poker królewski złożony od 10 do asa.</p>\r\n        </div>\r\n    );\r\n    }","export const ItemTypes = {\r\n    CARD: 'card',\r\n    CARD_PLACEHOLDER: 'cardPlaceholder',\r\n  }\r\n  ","import React, { useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport './App.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport RulesPage from './Rules'\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { useDrag } from 'react-dnd'\r\nimport  { ItemTypes }  from './ItemTypes'\r\nimport Backend from 'react-dnd-html5-backend'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { useDrop } from 'react-dnd'\r\nimport { BaseCard } from './card'\r\n\r\n\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    card: {\r\n        '-webkit-user-select': 'none', \r\n        '-moz-user-select': 'none',  \r\n        '-ms-user-select': 'none',   \r\n        'user-select': 'none',\r\n        // fontWeight: 'bold',\r\n        // fontSize: \"100px\",\r\n        height: \"15vw\",\r\n        width: \"10vw\",\r\n        // margin: '10px',\r\n    },\r\n    cardPlaceHolder: {\r\n      height: \"15vw\",\r\n      width: \"10vw\",\r\n      borderStyle: \"dashed\",\r\n    },\r\n    addNewCardBtnChildren: {\r\n      flex: '1',\r\n      // borderStyle: \"dashed\",\r\n      color: 'white'\r\n    },\r\n    suit: {\r\n      color: theme => theme.color,\r\n      fontSize: '1vw',\r\n      margin: \"-0.1vw\",\r\n    },\r\n    bigSuit: {\r\n      fontSize: \"5vw\",\r\n      margin: \"-0.5vw\",\r\n    },\r\n    cardNumber: {\r\n      fontWeight: \"bold\",\r\n      fontSize: \"2vw\",\r\n    },\r\n    result: {\r\n      // borderStyle: \"dashed\",\r\n      color: 'white'\r\n\r\n    },\r\n    avatar: {\r\n      backgroundColor: 'transparent',\r\n      'box-shadow': '0 0 3pt black', \r\n    },\r\n\r\n    redColor: {\r\n      color: 'red'\r\n    },\r\n    blackColor: {\r\n      color: 'black'\r\n    },\r\n    cardsList: {\r\n      '-moz-column-count': 2,\r\n      '-moz-column-gap': '20px',\r\n      '-webkit-column-count': 2,\r\n      '-webkit-column-gap': '20px',\r\n      columnCount: 2,\r\n      columnGap: '20px',\r\n      padding: '20px',\r\n      margin: '20px',\r\n      spacing: '20px',\r\n    },\r\n    suitSelector: {\r\n      margin: '10px',\r\n    },\r\n    numberSelector: {\r\n      'margin-bottom': '5px',\r\n      minHeight : '40px',\r\n      textAlign : 'center',\r\n      '& > *': {\r\n        height: '100%', \r\n      },\r\n    },\r\n    numberSelectAvatar : {\r\n      margin: 'auto',\r\n      textAlign: 'center',\r\n    }\r\n\r\n  \r\n  }));","import React, { useState, setState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport './App.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport RulesPage from './Rules'\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { useDrag } from 'react-dnd'\r\nimport  { ItemTypes }  from './ItemTypes'\r\nimport Backend from 'react-dnd-html5-backend'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { useDrop } from 'react-dnd'\r\nimport { useStyles } from './styles'\r\n\r\nexport const BaseCard = (props) => {\r\n    const {cardAttr: [cardAttr, setCardAttr]} = {\r\n      cardAttr: useState(0),\r\n      ...(props.state || {})\r\n    }; \r\n\r\n  \r\n    const [{ isDragging }, drag] = useDrag({\r\n      item: {cardAttr ,type: ItemTypes.CARD },\r\n      end: (item, monitor) => {\r\n        const dropResult = monitor.getDropResult()\r\n        \r\n        if (item && dropResult) {\r\n          // console.log(\"Upuszczono!\");\r\n          // console.log(cardAttr);\r\n          // console.log(item);\r\n          // console.log(item.cardAttr.source);\r\n          setCardAttr({\r\n            ...cardAttr, \r\n            isNowCreated: true,\r\n            destination: dropResult.name,\r\n            source: props.sourceId,\r\n          });\r\n\r\n          const { number,suit,source,isNowCreated,destination} = cardAttr;\r\n            // setCardNumber(props.number); \r\n            // setSuit(props.suit);\r\n            // setPlaceholderId(dropResult.name);\r\n            // setIsCardCreated(true);\r\n            // setSourceId(props.sourceId);\r\n            //alert(`You dropped ${item.number} into ${dropResult.name}!`)\r\n        }\r\n      },\r\n      collect: monitor => ({\r\n        isDragging: !!monitor.isDragging(),\r\n      }),\r\n    })\r\n    const opacity = isDragging ? 0.1 : 1\r\n    const classes = useStyles(props);\r\n    var color = 'red';\r\n    if(props.suit == \"hearth\" || props.suit == \"diamond\"){\r\n      color = 'red';\r\n    }\r\n    if(props.suit == \"spade\" || props.suit == \"club\"){\r\n      color = 'black';\r\n    }\r\n  \r\n  \r\n    return(\r\n      <div className={classes.card} ref={drag}>\r\n      <Card style={{ opacity }} >\r\n        <CardContent >\r\n          <Grid container direction = \"column\" alignContent='flex-start'>\r\n            <Grid item className={classes.cardNumber}>\r\n              {props.number}\r\n            </Grid>\r\n            <CardSuit suit={props.suit} color={color}></CardSuit>\r\n          </Grid>\r\n          <Grid container  direction=\"column\" alignItems=\"center\">\r\n            <CardSuit suit = {props.suit} size=\"big\" color = {color} ></CardSuit>\r\n          </Grid>\r\n          <Grid container direction = \"column\" alignContent='flex-end'>\r\n            <CardSuit suit={props.suit} color={color}></CardSuit>\r\n            <Grid item className={classes.cardNumber}>\r\n              {props.number}\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n      </div>\r\n    );\r\n  }\r\n  function CardSuit(props){\r\n    const classes = useStyles(props);\r\n    if(props.suit === \"diamond\"){\r\n      return(\r\n        <div className={`${props.size == 'big'? classes.bigSuit : \"\" } ${classes.suit}`}>\r\n          &#9830;\r\n        </div>\r\n      )\r\n    }\r\n    else if(props.suit === \"spade\"){\r\n      return(\r\n        <div className={`${props.size === 'big'? classes.bigSuit : \"\" } ${classes.suit}`}>\r\n          &#9824;\r\n        </div>\r\n      )\r\n    }\r\n    else if(props.suit === \"heart\"){\r\n      return(\r\n        <div className={`${props.size === 'big'? classes.bigSuit : \"\" } ${classes.suit}`}>\r\n          &#9829;\r\n        </div>\r\n      )\r\n    }\r\n    else if(props.suit === \"club\"){\r\n      return(\r\n        <div className={`${props.size === 'big'? classes.bigSuit : \"\" } ${classes.suit}`}>\r\n          &#9827;\r\n        </div>\r\n      )\r\n    }\r\n    else { //return blank\r\n      return(\r\n        <div className={`${props.size === 'big'? classes.bigSuit : \"\" } ${classes.suit}`}>\r\n          &nbsp;\r\n        </div>\r\n      )\r\n    }\r\n  }","import React, { useState, useEffect ,setState, useRef } from 'react';\r\nexport const cardValues = ['2','3','4','5','6','7','8','9','10','J','Q','K','A'];\r\n\r\nexport const cardSuits = [\r\n    {key: 'diamond', label : 'Karo', sign : <div>&diams;</div>, color: 'red'},\r\n    {key: 'heart', label : 'Kier', sign : <div>&#9829;</div>, color: 'red'},\r\n    {key: 'spade', label : 'Pik', sign : <div>&#9824;</div>, color: 'black'},\r\n    {key: 'club', label : 'Trefl', sign : <div>&#9827;</div>, color: 'black'}]\r\n","import React, { useState, useEffect ,setState, useRef } from 'react';\r\nimport { useStyles } from './styles'\r\nimport { cardValues } from './msc/Cards'\r\n\r\n\r\nconst alSameSuit = (cards) => {\r\n    let suit = cards[0].suit; \r\n    cards.forEach(card => {\r\n        if(card.suit != suit){\r\n            return false;\r\n        }\r\n    });\r\n    return true;\r\n}\r\n\r\n\r\nconst getTriples = (cards) => {\r\n    let totalNumberOfTriples = 0;\r\n    ['2','3','4','5','6','7','8','9','10','J','Q','K','A'].map((number) =>{\r\n        let numberOfTriples = 0;\r\n        cards.forEach(card => {   \r\n            if(card.number == number){\r\n                numberOfTriples ++;\r\n            }\r\n            \r\n        })\r\n        if(numberOfTriples>=3){\r\n            totalNumberOfTriples = totalNumberOfTriples + Math.floor(numberOfTriples/3);\r\n        }\r\n        // if(numberOfPairs>=3){\r\n        //     return true;\r\n        // }\r\n    })\r\n    return totalNumberOfTriples;\r\n}\r\n\r\nconst threeOfAKind = (cards) => {\r\n    let totalNumberOfTriples = getTriples(cards);\r\n    if(totalNumberOfTriples == 0) {\r\n        return <div></div>\r\n    }\r\n    else{\r\n        return(<p> Liczba trójek: {totalNumberOfTriples}</p>);\r\n    }\r\n}\r\n\r\nconst getPairs = (cards) => {\r\n    let totalNumberOfPairs = 0;\r\n    ['2','3','4','5','6','7','8','9','10','J','Q','K','A'].map((number) =>{\r\n        let numberOfPairs = 0;\r\n        cards.forEach(card => {   \r\n            if(card.number == number){\r\n                numberOfPairs ++;\r\n            }\r\n        })\r\n        totalNumberOfPairs = totalNumberOfPairs + Math.floor(numberOfPairs/2);\r\n    })\r\n    return totalNumberOfPairs\r\n   \r\n}\r\n\r\nconst pairs = (cards) => {\r\n    let totalNumberOfPairs = getPairs(cards);\r\n    if(totalNumberOfPairs == 0) {\r\n        return <div></div>\r\n    }\r\n    else{\r\n        return(<p> Liczba par: {totalNumberOfPairs}</p>);\r\n    }\r\n}\r\n\r\nconst getNextNumber = (number) => {\r\n    let numbers = ['2','3','4','5','6','7','8','9','10','J','Q','K','A'];\r\n    let nextIndex = numbers.indexOf(number);\r\n    if(nextIndex == -1){ //number not in array\r\n        return null;\r\n    }\r\n    nextIndex++;\r\n    \r\n    if(nextIndex< numbers.length){\r\n        return numbers[nextIndex];\r\n    }\r\n    else return null;\r\n    \r\n}\r\n\r\nconst straightFlush = (cards) => {\r\n    let isStraight = false;\r\n    let cardsInRow = 0;\r\n    let previousNumber = '';\r\n    let sortedCards = sortCards(cards);\r\n    let cardsWithStraight = [];\r\n    // console.log(sortedCards);\r\n    let diamonds = 0;\r\n    let spades = 0;\r\n    let hearts = 0;\r\n    let clubs = 0;\r\n    if(!isStraight){\r\n        for (let card of sortedCards) {\r\n            if(cardsInRow == 0){\r\n                previousNumber = card.number;\r\n                cardsInRow++;\r\n                cardsWithStraight.push(card.number);\r\n                if(card.suit == 'spade')\r\n                    spades++\r\n                if(card.suit == 'diamond')\r\n                    diamonds++\r\n                if(card.suit == 'heart')\r\n                    hearts++\r\n                if(card.suit == 'club')\r\n                    clubs++\r\n            }  \r\n            else{\r\n                if(getCardRank(card.number) == getCardRank(previousNumber)+1){\r\n                    cardsInRow ++;\r\n                    previousNumber = card.number;\r\n                    cardsWithStraight.push(card.number);\r\n                    if(card.suit == 'spade')\r\n                        spades++\r\n                    if(card.suit == 'diamond')\r\n                        diamonds++\r\n                    if(card.suit == 'heart')\r\n                        hearts++\r\n                    if(card.suit == 'club')\r\n                        clubs++\r\n                }\r\n                else{\r\n                    //check if currently checked card in the same as previous one \r\n                    //for example 6 7 7 8 9 10 \r\n\r\n                    if(getCardRank(card.number) == getCardRank(previousNumber)){\r\n                        previousNumber = card.number;\r\n                       \r\n                    }\r\n                    else{\r\n                        cardsInRow = 0;\r\n                        previousNumber = '';\r\n                        cardsWithStraight = [];\r\n                    }\r\n                    \r\n                }\r\n            }\r\n            if(cardsInRow == 5){\r\n                isStraight=true;\r\n                break;\r\n                \r\n            }\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n\r\n    if(isStraight && (spades >=5 || diamonds >=5 || hearts >=5 || clubs >=5 ))\r\n        return(<p> Poker: ({cardsWithStraight.map(c=> {return (c + \", \");})})</p>);\r\n        \r\n    else\r\n        return(<div></div>);\r\n}\r\n\r\nconst fullHouse = (cards) => { //One pair and three of a kind\r\n    // console.log(`pary : ${getPairs(cards)} ${getTriples(cards)}`)\r\n    // console.log()\r\n    if(cards.filter(c => c.suit != \"\").length >=5 && getPairs(cards) >= 1 && getTriples(cards) >= 1)\r\n        return(<p> Full </p>);\r\n    else\r\n        return(<div></div>);\r\n}\r\n\r\nconst fourOfKind = (cards) =>{\r\n    let totalNumberOfFours = 0;\r\n    cardValues.map((number) =>{\r\n        let numberOfFours = 0;\r\n        cards.forEach(card => {   \r\n            if(card.number == number){\r\n                numberOfFours ++;\r\n            }\r\n            \r\n        })\r\n        if(numberOfFours>=4){\r\n            totalNumberOfFours = totalNumberOfFours + Math.floor(numberOfFours/4);\r\n        }\r\n\r\n    })\r\n    if(totalNumberOfFours == 0) {\r\n        return <div></div>\r\n    }\r\n    else{\r\n        return(<p>Kareta</p>);\r\n    }\r\n\r\n\r\n}\r\n\r\nconst flush = (cards) => { //5 cards with the same color\r\n    let diamonds = 0;\r\n    let spades = 0;\r\n    let hearts = 0;\r\n    let clubs = 0;\r\n    cards.map(card => {\r\n        if(card.suit == 'spade')\r\n            spades++\r\n        if(card.suit == 'diamond')\r\n            diamonds++\r\n        if(card.suit == 'heart')\r\n            hearts++\r\n        if(card.suit == 'club')\r\n            clubs++\r\n    })\r\n    if(spades >=5)\r\n        return(<p> Kolor - Pik</p>);\r\n    if(diamonds >=5)\r\n        return(<p> Kolor - Karo</p>);\r\n    if(hearts >=5)\r\n        return(<p> Kolor - Kier</p>);\r\n    if(clubs >=5)\r\n        return(<p> Kolor - Trefl</p>);\r\n    else\r\n        return(<div></div>);\r\n\r\n}\r\n\r\nconst straight = (cards) => { //5 cards in a row\r\n    let isStraight = false;\r\n    let cardsInRow = 0;\r\n    let previousNumber = '';\r\n    let sortedCards = sortCards(cards);\r\n    let cardsWithStraight = [];\r\n    // console.log(sortedCards);\r\n    //check if ace is in cards and check for ace-straight (A 2 3 4 5) or (10 J Q K A)\r\n    if(sortedCards.some(o=>o.number == 'A'))\r\n        if( sortedCards.some(o=>o.number == '2') && \r\n            sortedCards.some(o=>o.number == '3') &&\r\n            sortedCards.some(o=>o.number == '4') && \r\n            sortedCards.some(o=>o.number == '5')){\r\n                isStraight=true;\r\n                cardsWithStraight=['A','2','3','4','5'];\r\n        }\r\n        \r\n    if(!isStraight){\r\n        for (let card of sortedCards) {\r\n            if(cardsInRow == 0){\r\n                previousNumber = card.number;\r\n                cardsInRow++;\r\n                cardsWithStraight.push(card.number);\r\n            }  \r\n            else{\r\n                if(getCardRank(card.number) == getCardRank(previousNumber)+1){\r\n                    cardsInRow ++;\r\n                    previousNumber = card.number;\r\n                    cardsWithStraight.push(card.number);\r\n                }\r\n                else{\r\n                    //check if currently checked card in the same as previous one \r\n                    //for example 6 7 7 8 9 10 \r\n                    if(getCardRank(card.number) == getCardRank(previousNumber)){\r\n                        previousNumber = card.number;\r\n                    }\r\n                    else{\r\n                        cardsInRow = 0;\r\n                        previousNumber = '';\r\n                        cardsWithStraight = [];\r\n                    }\r\n                    \r\n                }\r\n            }\r\n            if(cardsInRow == 5){\r\n                isStraight=true;\r\n                break;\r\n                \r\n            }\r\n            \r\n            \r\n        }\r\n    }   \r\n    if(isStraight)\r\n        return(<p> Strit: ({cardsWithStraight.map(c=> {return (c + \", \");})})</p>);\r\n        \r\n    else\r\n        return(<div></div>);\r\n\r\n}\r\n\r\nconst getCardRank = (card) => {\r\n    const cardRank = parseInt(card);\r\n    if(isNaN(cardRank)){\r\n        if(card == '')\r\n            return 15;\r\n        if(card == 'J')\r\n            return 11;\r\n        if(card == 'Q')\r\n            return 12;\r\n        if(card == 'K')\r\n            return 13;\r\n        if(card == 'A')\r\n            return 14;\r\n    }\r\n    else \r\n        return cardRank\r\n    \r\n}\r\n\r\nconst sortCards = (cards) => {\r\n    //sorting cards ascending by number\r\n    const tempCards = [...cards]\r\n    return tempCards.sort(function(a, b){return getCardRank(a.number)-getCardRank(b.number)}) \r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const Result = (props) =>{\r\n    let deckArray = props.deckArray;\r\n    const classes = useStyles();\r\n    \r\n    return(<div className = {classes.result}>\r\n        {pairs(deckArray)} \r\n        {threeOfAKind(deckArray)}  \r\n        {straight(deckArray)} \r\n        {flush(deckArray)}\r\n        {fullHouse(deckArray)}\r\n        {fourOfKind(deckArray)}\r\n        {straightFlush(deckArray)}\r\n        </div>);\r\n}","import React, { useState, useEffect ,setState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { cardValues, cardSuits } from './msc/Cards'\r\n\r\nimport { useStyles } from './styles'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { StylesProvider } from '@material-ui/styles'\r\nimport Card from '@material-ui/core/Card';\r\n\r\n\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles(props);\r\n  const { onClose, selectedValue, open } = props;\r\n  const [ selectedSuit, setSelectedSuit ] = React.useState({key: 'diamond', label : 'Karo', sign : <div>&diams;</div>, color: 'red'});\r\n  const [ selectedNumber, setSelectedNumber ] = React.useState(0);\r\n//   const [selectedValue, setSelectedValue] = React.useState();\r\n  const handleClose = () => {\r\n    onClose(null);\r\n  };\r\n\r\n  const handleListItemClick = value => {\r\n    onClose({number: selectedNumber,\r\n      suit: selectedSuit.key});\r\n  };\r\n\r\n  const setSuit = value => {\r\n    console.log(value)\r\n    setSelectedSuit(value);\r\n    console.log(selectedSuit)\r\n  }\r\n  const setNumber = value => {\r\n    console.log(value)\r\n    setSelectedNumber(value);\r\n    \r\n    \r\n  }\r\n  useEffect(() => {\r\n    if(selectedNumber){ //Don't change if component rendered for the first time\r\n      handleListItemClick()\r\n      console.log(selectedNumber)\r\n    }\r\n    }, [selectedNumber]);\r\n\r\n\r\n\r\n  const randomCard = () =>{\r\n    setSelectedNumber(cardValues[~~(Math.random() * cardValues.length)]);\r\n    setSelectedSuit(cardSuits[~~(Math.random() * cardSuits.length)]);\r\n    console.log(cardSuits[~~(Math.random() * cardValues.length)]);\r\n    console.log(cardValues[~~(Math.random() * cardValues.length)])\r\n  }\r\n  const flexContainer = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: 0,\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n    <DialogTitle id=\"simple-dialog-title\">Dodaj nową kartę</DialogTitle>\r\n\r\n    <List style={flexContainer}>\r\n    {cardSuits.map(suit => (\r\n          <ListItem button onClick={() => setSuit(suit)} key={suit} className = {classes.suitSelector}>\r\n            <ListItemAvatar>\r\n              <Avatar  className={`${classes.avatar} \r\n              ${suit.color === 'red'? classes.redColor : classes.blackColor } `}\r\n              >\r\n                {suit.sign}\r\n              </Avatar>\r\n              \r\n            </ListItemAvatar>\r\n            {suit.label}\r\n          </ListItem>\r\n        ))}\r\n    </List>\r\n\r\n      <List className={`${classes.cardsList}`} >\r\n        {cardValues.map(cardNumber => (\r\n\r\n          <Card className = {classes.numberSelector} >\r\n          <ListItem  button onClick={() => setNumber(cardNumber)} key={cardNumber} className = {classes.numberSelector}  >\r\n            <ListItemAvatar className = {classes.numberSelectAvatar}>\r\n              <div  className={`${selectedSuit.color === 'red'? classes.redColor : classes.blackColor } `}>\r\n                {selectedSuit.sign}\r\n              </div>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={cardNumber} />\r\n          </ListItem>\r\n          </Card>\r\n        ))}\r\n        <Card className = {classes.numberSelector} >\r\n          <ListItem button onClick = {randomCard} key={\"A\"} className = {classes.numberSelector} >\r\n            <ListItemText primary={\"Losowa karta\"}  />\r\n          </ListItem>\r\n          </Card>\r\n      </List>\r\n    </Dialog>\r\n    </StylesProvider>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default function AddNewCardTooltip(props) {\r\n  const {cardAttr: [cardAttr, setCardAttr]} = {\r\n    cardAttr: useState(0),\r\n    ...(props.state || {})\r\n  };\r\n  \r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    if(value != null){\r\n      setCardAttr({...cardAttr,\r\n        number: value.number,\r\n        suit: value.suit,\r\n        source: -1, \r\n        destination: -1, \r\n        isNowCreated: true});\r\n      }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <Tooltip title=\"Dodaj nową kartę\" TransitionComponent={Zoom}\r\n            aria-label=\"add\" placement=\"left-end\" onClick={handleClickOpen}>\r\n        <Fab color=\"primary\" className={classes.fab}>\r\n        <AddIcon />\r\n        </Fab>\r\n    </Tooltip>\r\n    <SimpleDialog  open={open} onClose={handleClose} />\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect ,setState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function InstructionDialog (props) {\r\n\r\n  const [open, setOpen] = React.useState(props.open)\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open);\r\n  }, [props.open]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={'md'}\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Instrukcja użytkowania\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Dodaj kartę używając przycisku z plusem, następnie przeciągnij ją ze stosu \r\n            na dowolną pozycję za pomocą myszki. Wszystkie układy karty na stole zobaczysz w prawym dolnym rogu.\r\n            Możesz również poznać szczegółowe zasady gry klikając w na przycisk w prawym górnym rogu.\r\n            Eksperymentuj i ucz się!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" >\r\n            <b>Ok</b>\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import MUICookieConsent from 'material-ui-cookie-consent';\r\nimport React, { useState, useEffect ,setState, useRef } from 'react';\r\n// ....\r\n\r\n\r\nexport default function CookieConsentDialog (props) {\r\n\r\n    const [open, setOpen] = React.useState(props.open)\r\n  \r\n    useEffect(() => {\r\n      setOpen(props.open);\r\n    }, [props.open]);\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <MUICookieConsent \r\n        cookieName=\"acceptCookie\"\r\n        componentType=\"Snackbar\" // default value is Snackbar\r\n        message=\"Ta strona wykorzystuje pliki cookies w celu prawidłowego działania strony.\r\n         Czy zgadzasz się na wykorzystywanie plików cookies?\"\r\n        />\r\n      </div>\r\n    );\r\n  }","import React, { useState, useEffect ,setState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport './App.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { RulesPage } from './Rules'\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { useDrag } from 'react-dnd'\r\nimport  { ItemTypes }  from './ItemTypes'\r\nimport Backend from 'react-dnd-html5-backend'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { useDrop } from 'react-dnd'\r\nimport { BaseCard } from './card'\r\nimport { useStyles } from './styles'\r\nimport { Result } from './PokerLogic'\r\nimport Fab from '@material-ui/core/Fab';\r\n// import AddIcon from '/material-ui-icons';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport AddNewCardTooltip from './AddCardDialog';\r\nimport InstructionDialog from './instructionDialog';\r\nimport CookieConsentDialog from './CookieConsentDialog';\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nfunction Header(props){\r\n  let button;\r\n  if(props.page === \"rules\"){\r\n    button = \r\n    <Button component={Link} to=\"/rules\" variant=\"contained\">\r\n      Zasady gry\r\n    </Button>\r\n  }\r\n  else{ \r\n    button = \r\n    <Button component={Link} to=\"/home\" variant=\"contained\">\r\n      Powrót\r\n    </Button>\r\n  }\r\n\r\n  return (\r\n    <div className=\"header container\">\r\n    Aplikacja wspomagająca grę w pokera\r\n    {button}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\nconst  CardPlaceHolder = (props) => {\r\n  const [{ canDrop, isOver }, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    drop: () => ({ name: props.id }),\r\n    collect: monitor => ({\r\n      isOver: monitor.isOver(),\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n  })\r\n\r\n  const isActive = canDrop && isOver\r\n  let backgroundColor = 'transparent'\r\n  if (isActive) {\r\n    backgroundColor = 'green'\r\n  } else if (canDrop) {\r\n    backgroundColor = 'gray'\r\n  }\r\n  //\r\n  const classes = useStyles();\r\n  return(\r\n    <Grid item ref={drop} style={{ backgroundColor }}>\r\n    <div className={classes.cardPlaceHolder}>\r\n      {props.component}\r\n      {/* {lastDroppedItem && (\r\n        <p>Last dropped: {JSON.stringify(lastDroppedItem)}</p>\r\n      )} */}\r\n    </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nvar cardsDeckArray = [\r\n  {id: 0, number: '', suit: '', card: <div></div>},\r\n  {id: 1, number: '', suit: '', card: <div></div>},\r\n  {id: 2, number: '', suit: '', card: <div></div>},\r\n  {id: 3, number: '', suit: '', card: <div></div>},\r\n  {id: 4, number: '', suit: '', card: <div></div>},\r\n  {id: 5, number: '', suit: '', card: <div></div>},\r\n  {id: 6, number: '', suit: '', card: <div></div>}]; \r\n// var cardsDeckArray = [<div></div>,<div></div>,<div></div>,<div></div>,<div></div>,<div></div>,<div></div>]; \r\nvar cardsHandArray = []; //TODO change this ugly thing\r\nvar cardCreated ;\r\n\r\n\r\nfunction HomePage(){\r\n  const classes = useStyles();\r\n  const [suit, setSuit] = useState('');\r\n  const [cardNumber, setCardNumber] = useState('');\r\n  const [isCardCreated, setIsCardCreated] = useState('');\r\n  const [placeholderId, setPlaceholderId] = useState('');\r\n  const [sourceId, setSourceId] = useState('');\r\n  const [instructionDialog, setInstructionDialog] = useState(false);\r\n  const [cardAttr, setCardAttr] = useState({\r\n     number: 5, \r\n     suit: 'heart' , \r\n     source: '', \r\n     isNowCreated : false, \r\n     destination: ''\r\n    });\r\n  const state = {\r\n    cardAttr: [cardAttr, setCardAttr],\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    if(!Cookies.get('showInstruction')){ //if this is first visit on a page\r\n      Cookies.set('showInstruction', true)\r\n      console.log(\"Pokaz instrukcje\")\r\n      setInstructionDialog(true);\r\n\r\n    }\r\n\r\n  }, []);\r\n\r\n  if(cardAttr.isNowCreated){\r\n    // console.log(\"Upuszczono na : \" + cardAttr.destination)\r\n    setCardAttr({...cardAttr, isNowCreated: false});\r\n    if(cardAttr.destination == -1){\r\n      cardCreated = <BaseCard color=\"red\" number={cardAttr.number} suit = {cardAttr.suit} state = {state} sourceId = {-1}></BaseCard>;\r\n      // console.log(cardCreated)\r\n    }\r\n    else{\r\n      // console.log(\"Upuszczono na : \" + cardAttr.destination)\r\n      // console.log(\"Upuszczono z : \" + cardAttr.source)\r\n      cardsDeckArray[cardAttr.destination].suit = cardAttr.suit;\r\n      cardsDeckArray[cardAttr.destination].number = cardAttr.number;\r\n      cardsDeckArray[cardAttr.destination].card = \r\n      <BaseCard color=\"red\" \r\n        number={cardAttr.number} \r\n        suit = {cardAttr.suit} \r\n        state = {state} \r\n        sourceId = {cardAttr.destination}\r\n      ></BaseCard>;\r\n      // console.log(cardsDeckArray[cardAttr.destination])\r\n      cardCreated = <div></div>;\r\n      if(cardAttr.source != -1 && cardAttr.source != cardAttr.destination ){\r\n        cardsDeckArray[cardAttr.source].card = <div></div>;\r\n        cardsDeckArray[cardAttr.source].number = '';\r\n        cardsDeckArray[cardAttr.source].suit = '';\r\n      }\r\n      setPlaceholderId('');\r\n    }\r\n    \r\n    setIsCardCreated(false);\r\n    // console.log(\"Zmieniono!\");\r\n    // console.log(cardsDeckArray);\r\n  }\r\n  // useEffect([cardAttr]);\r\n  return (\r\n    <React.Fragment>\r\n      <InstructionDialog open = {instructionDialog}></InstructionDialog>\r\n      <CookieConsentDialog ></CookieConsentDialog>\r\n      <DndProvider backend={Backend}>\r\n      <Grid container>\r\n        <h2 className = \"h2-text\">Karty na stole: </h2>\r\n      </Grid>\r\n      {/* {cardAttr.number}/{cardAttr.suit}/{cardAttr.source}/{cardAttr.destination}/     */}\r\n      <Grid container spacing={1}>\r\n        <Grid container item xs = {8} spacing={1} >\r\n          <CardPlaceHolder id =\"0\" component={cardsDeckArray[0].card}/>\r\n          <CardPlaceHolder id =\"1\" component={cardsDeckArray[1].card}/>\r\n          <CardPlaceHolder id =\"2\" component={cardsDeckArray[2].card}/>\r\n          <CardPlaceHolder id =\"3\" component={cardsDeckArray[3].card}/>\r\n          <CardPlaceHolder id =\"4\" component={cardsDeckArray[4].card}/>\r\n        </Grid>\r\n        <Grid container item xs = {4} spacing={1} alignItems=\"center\" justify=\"flex-end\">\r\n          <CardPlaceHolder className = \"card-back\" id =\"-1\" component={\r\n            <div>{cardCreated}</div> \r\n            }\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid>\r\n        <Grid container>\r\n          <h2 className = \"h2-text\" >Karty w ręku:</h2>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid container item spacing={1} xs = {4}>\r\n            <CardPlaceHolder id =\"5\" component={cardsDeckArray[5].card}/>\r\n            <CardPlaceHolder id =\"6\" component={cardsDeckArray[6].card}/>\r\n            \r\n          </Grid>\r\n\r\n          <Grid container item xs = {4} alignItems=\"flex-end\" justify=\"center\">\r\n            \r\n            <AddNewCardTooltip state = {state}/>\r\n          </Grid>\r\n\r\n\r\n          <Grid container item xs = {4} alignItems=\"stretch\" justify=\"flex-end\">\r\n              <Result deckArray = {cardsDeckArray}></Result>\r\n          </Grid>\r\n          \r\n          \r\n        </Grid>\r\n      </Grid>\r\n\r\n    </DndProvider>\r\n  </React.Fragment>\r\n  );\r\n}\r\n \r\nfunction App() {\r\n  const [page, setPage] = useState(\r\n    \"rules\"\r\n  );\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n      <Header page = {page}/>\r\n      <Switch>\r\n      <Route path=\"/rules\" render={props => ( setPage(\"home\"),\r\n                    <RulesPage />\r\n                )} >\r\n        </Route>\r\n      <Route path=\"/\" render={props => ( setPage(\"rules\"),\r\n                    <HomePage />\r\n                )} >\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}